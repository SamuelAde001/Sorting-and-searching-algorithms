FUNCTION insertion_sorting(arr) : INTEGER // Declare a function to run the insertion algorithm with the array called arr
VAR
  let currentElement = arr[i];  // set variables where currentElement is arr(index)
    let j = i - 1; // while a variable of j would be equal to the immediate left index after i
    
BEGIN
  FOR i FROM 1 TO arr.length-1 STEP 1  DO  // Run a for loop through the array to loop through each of tehn index starting from index 1 which would be the second element in teh array, in every iteration compare the index with the immedate left index (j) to find out if j is greater than i 

    WHILE (j >= 0 && arr[j] > currentElement) DO // Run a while loop that checks if arr(j) is greater than currentElement, then it would it add + 1 to the integer of arr(j) if not irt would skip and go to the next index of currentElement
      arr[j + 1] = arr[j];
      j = j - 1
    END_WHILE
    arr[j + 1] = currentElement;
  END_FOR
  RETURN arr ;
END


///////////////////////////////// Algorithm that reads a users input of array and helps sort the array for them
ALGORITHM insertion_sort_algorithm
VAR
  arr : ARRAY_OF INTEGER[arr.length];
BEGIN
  Write("Input the list of numbers")// User inputing array numbers
  Read(arr)// Read the inputs of Array

  insertion_sorting(arr)// Call the fuction that sorts out an array through insertion

  Write(arr)// Write out the sorted value of array back to user
END